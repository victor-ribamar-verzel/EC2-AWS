name: s3 on aws

on:
  workflow_dispatch:
    inputs:
      bucket_name:
        description: 'Nome do seu Bucket s3'
        required: true
      region:
        description: 'Regiao da AWS'
        required: true
      action:
        description: 'Action to perform (apply/destroy)'
        required: true

jobs:
  apply:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'apply' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region }}
    - name: Terraform Init
      run: terraform init
      working-directory: s3
    - name: Terraform Format
      run: terraform fmt
      working-directory: s3
    - name: Terraform Validate
      run: terraform validate
      working-directory: s3
    - name: Terraform Apply
      run: terraform apply -var bucket_name=${{ github.event.inputs.bucket_name }} -var region=${{ github.event.inputs.region }}  -auto-approve
      working-directory: s3

  destroy:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.action == 'destroy' }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ github.event.inputs.region }}
    - name: Terraform Init
      run: terraform init
      working-directory: s3
    - name: Terraform FMT
      run: terraform fmt
      working-directory: s3
    - name: Terraform Validate
      run: terraform validate
      working-directory: s3
    - name: Terraform Destroy
      run: terraform destroy -var bucket_name=${{ github.event.inputs.bucket_name}} -var region=${{ github.event.inputs.region }} -auto-approve
      working-directory: s3